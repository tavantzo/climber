name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.0.0)'
        required: true
        type: string
      stable:
        description: 'Mark as stable release'
        required: false
        type: boolean
        default: false

jobs:
  test:
    name: Test before release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run linter
      run: yarn lint

    - name: Run tests
      run: yarn test

    - name: Run tests with coverage
      run: yarn test:coverage

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Get tag info
      id: tag_info
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          TAG="${{ github.event.inputs.tag }}"
        else
          TAG="${GITHUB_REF#refs/tags/}"
        fi

        echo "tag=$TAG" >> $GITHUB_OUTPUT

        # Check if tag is stable (contains 'stable' or is a release version)
        if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]] || [[ "$TAG" =~ stable ]] || [ "${{ github.event.inputs.stable }}" = "true" ]; then
          echo "stable=true" >> $GITHUB_OUTPUT
          echo "prerelease=false" >> $GITHUB_OUTPUT
        else
          echo "stable=false" >> $GITHUB_OUTPUT
          echo "prerelease=true" >> $GITHUB_OUTPUT
        fi

    - name: Generate changelog
      id: changelog
      run: |
        TAG="${{ steps.tag_info.outputs.tag }}"

        # Get previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

        if [ -n "$PREVIOUS_TAG" ]; then
          echo "## Changes since $PREVIOUS_TAG" > CHANGELOG_RELEASE.md
          echo "" >> CHANGELOG_RELEASE.md

          # Get commits since previous tag
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> CHANGELOG_RELEASE.md
        else
          echo "## Initial Release" > CHANGELOG_RELEASE.md
          echo "" >> CHANGELOG_RELEASE.md
          echo "First release of the climber CLI tool." >> CHANGELOG_RELEASE.md
        fi

        # Add stable version note if applicable
        if [ "${{ steps.tag_info.outputs.stable }}" = "true" ]; then
          echo "" >> CHANGELOG_RELEASE.md
          echo "## 🎉 Stable Release" >> CHANGELOG_RELEASE.md
          echo "This is a stable release suitable for production use." >> CHANGELOG_RELEASE.md
        fi

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_info.outputs.tag }}
        release_name: Release ${{ steps.tag_info.outputs.tag }}
        body_path: CHANGELOG_RELEASE.md
        draft: false
        prerelease: ${{ steps.tag_info.outputs.prerelease }}

  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test, release]
    if: steps.tag_info.outputs.stable == 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Get tag info
      id: tag_info
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          TAG="${{ github.event.inputs.tag }}"
        else
          TAG="${GITHUB_REF#refs/tags/}"
        fi

        echo "tag=$TAG" >> $GITHUB_OUTPUT

        # Check if tag is stable
        if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]] || [[ "$TAG" =~ stable ]] || [ "${{ github.event.inputs.stable }}" = "true" ]; then
          echo "stable=true" >> $GITHUB_OUTPUT
        else
          echo "stable=false" >> $GITHUB_OUTPUT
        fi

    - name: Update package.json version
      run: |
        TAG="${{ steps.tag_info.outputs.tag }}"
        VERSION=${TAG#v}  # Remove 'v' prefix
        yarn version $VERSION --no-git-tag-version

    - name: Publish to NPM
      run: yarn publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [release, publish-npm]
    if: always()

    steps:
    - name: Get tag info
      id: tag_info
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          TAG="${{ github.event.inputs.tag }}"
        else
          TAG="${GITHUB_REF#refs/tags/}"
        fi

        echo "tag=$TAG" >> $GITHUB_OUTPUT

        # Check if tag is stable
        if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]] || [[ "$TAG" =~ stable ]] || [ "${{ github.event.inputs.stable }}" = "true" ]; then
          echo "stable=true" >> $GITHUB_OUTPUT
        else
          echo "stable=false" >> $GITHUB_OUTPUT
        fi

    - name: Notify success
      if: needs.release.result == 'success'
      run: |
        echo "✅ Release ${{ steps.tag_info.outputs.tag }} created successfully!"
        if [ "${{ steps.tag_info.outputs.stable }}" = "true" ]; then
          echo "🎉 This is a stable release and has been published to NPM!"
        else
          echo "📦 This is a pre-release version."
        fi

    - name: Notify failure
      if: needs.release.result == 'failure'
      run: |
        echo "❌ Release ${{ steps.tag_info.outputs.tag }} failed!"
        exit 1
